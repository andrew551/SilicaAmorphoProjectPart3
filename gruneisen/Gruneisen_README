Overleaf document: https://www.overleaf.com/project/6596d7fd6448722baa06be1e 

#### INSTRUCTION ####

1 To prepare 'fc3_ind.bin' and 'fc3_val.bin' from YOUR FC3() matrix use the following code:

   integer :: ind(6),cnt,ia, ii, ib, jj, ic, kk
   real*8 :: var
   
   inquire(iolength=reclen)ind(:) open(100,file='fc3_ind.bin',form='unformatted',action='write',access='direct',recl=reclen,status='unknown')
   
   inquire(iolength=reclen1)var open(200,file='fc3_val.bin',form='unformatted',action='write',access='direct',recl=reclen1,status='unknown')
	
   cnt=1
   do while(.true.)
   ! ia,ib,ic are indexes of atoms a,b,c, respectively. Cartesian indices are ii,jj,kk.
     ind(:)=[ia, ii, ib, jj, ic, kk]
	 var=YOUR_FC3(ia, ii, ib, jj, ic, kk)
     write(100,cnt)ind(:)
     write(200,cnt)var
	 cnt=cnt+1
	 if(cnt>number_of_nonzero_elements) goto 11
   enddo
11 close(100)
   close(200)

1) Specify paths in the file 'inputs': i) 1st path - structural model in XYZ format; ii) 2nd path - eigenvalues; iii) 3rd path - eigenvectors; iv) 4th path - FC3 matrix.
 
2) Launch script "grun.pbs" (adjusted for the Kelvin2) to calculate: i) 'rmean.dat' (for IS part), ii) mode-gruneisen (MAIN & IS parts), and iii) T-dependent Gruneisen parameter, \gamma(T). For additional information see DESCRIPTION & INFO below.


#### DESCRIPTION & INFO  ####

(i)   'Gruneisen_mpi.f90' code is the parallel-mode code to calculate the mode-Gruneisen parameters.  
	
(ii)  'internal_strain.f90' code is to calculate the internal-strain (IS) correction term.

In the output 'rmean.dat': 
  the 1st column corresponds to the atom number i;
  the 2-4 columns correspond to xyz coordinates of the vector \overline{R}_i [see Eq.(36) or Eq.(50)];
  the 5-7 columns correspond to xyz coordinates of the position vector R_i.
   
(iii) 'postproc.f90' code is to calculate the T-dependent Gruneisen parameter by using mode-Gruneisen data from (i) and (ii);
      USE ./postproc.exe with a input factor A={-2,-1,0,+1,+2} to manage (R+A*Rmean) contribution as follows: 
        ./postproc.exe -2 ! This corresponds to the case \gamma(T)~(R-2*Rmean); 
        ./postproc.exe 1  ! This corresponds to the case \gamma(T)~(R+Rmean) (i.e. as in A&F PRL 1997).
NB.: The 'pre-factor' issue was solved, and the right factor "-1"!

  
 